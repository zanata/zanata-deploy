#!/bin/bash -eu
### NAME
###     zanata-version-get-latest - Get the latest version
###
### SYNOPSIS
###     zanata-version-get-latest [Options] -j
###     zanata-version-get-latest [Options] <module>|<artifact>
### 
### DESCRIPTION
###     This program get the latest version from latest git label.
###
### ARGUMENTS
###     <module>: module name like zanata-api
###     <artifact>: artifact name like api
###
### OPTIONS
###     -h: Show this help.
###
###     -j: Jenkins mode.
###         This assumes that current directory is <module> work directory.
###         and correct branch is checked out.
###
###     -q: Quiet mode.
###         Only show the result and error.
###     
###     -t: Get tag.
###         Return the tag instead
###     
### EXIT STATUS
###    Returns EXIT_OK (0) when successfully.
###
###    Returns EXIT_FATAL_INVALID_OPTIONS (3) when invalid 
###        options or arguments are given
###
###    Returns EXIT_FATAL_UNKNOWN_MODULE (5) when module does not exists
###
###    Returns EXIT_FATAL_FAIL (6) generic failure, 
###        usually failed to get the resources at the net
###
###    Return EXIT_RETURN_FALSE (40) when Version-name exists, but no issues.
###

shopt -s globstar
ScriptDir=$(dirname $(readlink  -q -f $0))
FunctionScriptFile=${ScriptDir}/zanata-functions
source "${FunctionScriptFile}"
trap exit_print_error EXIT
ProgramName=$(basename $0)

##=== parsing Start ===
JenkinsMode=0
QuietMode=0
TagMode=0
PrintStatusOpt=
DetectModuleTagOpt=

while getopts "hjqt" opt;do
    case $opt in
	h )
	    zanata_script_help $0
	    exit ${EXIT_OK}
	    ;;
	j )
	    JenkinsMode=1
	    ;;
	q )
	    QuietMode=1
	    PrintStatusOpt=-q
	    DetectModuleTagOpt=-q
	    export ZANATA_QUIET_MODE=1
	    ;;
	t )
	    TagMode=1
	    ;;
	* )
	    failed ${EXIT_FATAL_INVALID_OPTIONS} "$opt"
	    ;;
    esac
done
print_status -t "parse" -s "Start"
shift $((OPTIND-1))


##=== prepare  Start ===
print_status -t prepare -s "Start"
if [ $JenkinsMode -eq 0 ];then
    moduleResult=$(get_module_from_command ${1-})
    print_status "moduleResult=$moduleResult"
    ## Get Module
    Module=$(sed -e 's/ .*//'<<<"$moduleResult")
    if [[ $moduleResult == *1 ]];then
	shift
    fi
    print_status " Module=$Module"

    ensure_repo_generic ${WORK_ROOT} ${Module}
    checkout_releasing_branch ${Module} ${WORK_ROOT} 1>/dev/stderr

    cd ${WORK_ROOT}/${Module} >/dev/null
fi

LatestTag=$(detect_module_tag $DetectModuleTagOpt -j)
if [ $TagMode -eq 1 ];then
    echo "$LatestTag"
    exit $EXIT_OK
fi

sed -e 's/^[a-zA-Z-]*//' <<<$LatestTag

