#!/bin/bash -eu
### NAME
###     zanata-0install-release - release package via 0install
###
### SYNOPSIS
###     zanata-0install-release <package>
###
###
### ARGUMENTS
###     <package>
###         The package to be released, so far we have "zanata-cli"
###
### DESCRIPTION
###     zanata-0install-release releases package via 0install.
###
###     This script should works in Jenkins or as a standalone command.
###     However, this script assumes that feed and template files (such
###     as zanata-cli.xml and zanata-cli.xml.template) are in current
###     directory.
###
###     It also assumes the version to be released are already in maven central.
###
###     This script automatically installs the missing 0install tool scripts
###     such as 0template and 0repo in $HOME/bin
###
### ENVIRONMENT
###     VERSION
###         (Required) The version to be released. This version MUST BE in maven central.
###
###     GPG_SIGNING_KEY
###         (Required) The GPG Key used to sign the feed.
###
###     STABILITY
###         The stability of this release.
###         Valid values: Auto, stable, testing, developer, buggy, insecure
###         Auto means it will give Stable to official release, and Testing for
###         release candidate (rc).
###         Default: Auto
: ${STABILITY:=Auto}
###
###     BRANCH
###         (Experimental) the script branch to be used.
###         If you want to try something new in a pull request,
###         you can specify the pull request branch.
###         Default: master
: ${BRANCH:=master}
##
###     ZEROREPO_DIR
###         Data directory for 0repo.
###         Default: $HOME/0repo
: ${ZEROREPO_DIR:=$HOME/0repo}

HOME_BIN_DIR=$HOME/bin
FEED_UPLOAD_DIR=$(pwd)
EXIT_FATAL_INVALID_OPTIONS=3

function echo_stderr(){
    echo "$1" > /dev/stderr
}

function zerorepo_config_set(){
    local bakSuffix=$1
    local key=$2
    local value=$3
    sed -i${bakSuffix} -e "/$key\s*=/"' s|^\([^=]*=\).*$|\1 "'"${value}"'"|' $ZEROREPO_DIR/$Package/0repo-config.py
}

function create_feed(){
    local feedPrefix=$1
    local templateFile=$2
    local feedFile=$feedPrefix-$version.xml

    if [[ ! -e $feedFile ]]; then
        echo_stderr "Creating $feedFile from $templateFile - version $version"
        $HOME_BIN_DIR/0template $templateFile version=$version artifactVersion=$artifactVersion stability=$Stability
    fi

    $HOME_BIN_DIR/0repo add $feedFile
}

[[ -z ${VERSION-} ]] && echo_stderr "Environment VERSION is needed" && exit $EXIT_FATAL_INVALID_OPTIONS

[[ -z ${GPG_SIGNING_KEY-} ]] && echo_stderr "Environment GPG_SIGNING_KEY is needed" && exit $EXIT_FATAL_INVALID_OPTIONS

[[ -z ${1-} ]] && echo_stderr "Package name is needed" && exit $EXIT_FATAL_INVALID_OPTIONS

Package=$1

## artifactVersion use version convention in maven artifact, i.e. 4.2.0-rc-4
artifactVersion=$VERSION

## 0install accept rcX but not rc-X
version=$(sed -e 's/rc-/rc/' <<<$VERSION)

if [[ $STABILITY = Auto ]];then
    if [[ $artifactVersion =~ rc-[0-9][0-9]* ]]; then
        Stability=testing
    else
	Stability=stable
    fi
else
    Stability=$STABILITY
fi

DIST_URL_PREFIX="https://repo1.maven.org/maven2/org/zanata/$Package"

## Download 0install tools
mkdir -p $HOME_BIN_DIR
for prog in 0template 0repo ; do
    [[ ! -r $HOME_BIN_DIR/$prog ]] && 0install add $prog http://0install.net/tools/$prog.xml
done

## Setup 0repo
mkdir -p $ZEROREPO_DIR
if [[ ! -e $ZEROREPO_DIR/$Package ]] ;then
    $HOME_BIN_DIR/0repo create $ZEROREPO_DIR/$Package "$GPG_SIGNING_KEY"
    cd $ZEROREPO_DIR/$Package
    mkdir -p archive-backups
    curl -o 0repo-config.py --silent --insecure --location "https://raw.githubusercontent.com/zanata/zanata-scripts/$BRANCH/0install/0repo-config.in.py"
    zerorepo_config_set '.repo.bak' 'REPOSITORY_BASE_URL' 'https://raw.githubusercontent.com/zanata/zanata.github.io/master/files/0install'
    zerorepo_config_set '.archive.bak' 'ARCHIVES_BASE_URL' "$DIST_URL_PREFIX"
    zerorepo_config_set '.gpg.bak' 'GPG_SIGNING_KEY' "$GPG_SIGNING_KEY"
    zerorepo_config_set '.gpg.bak' 'FEED_UPLOAD_DIR' "$FEED_UPLOAD_DIR"
    $HOME_BIN_DIR/0repo register
    cd -

    ## Import existing feed
    $HOME_BIN_DIR/0repo add $Package.xml $Package-jre.xml
fi

create_feed $Package $Package.xml.template
create_feed $Package-jre $Package-jre.xml.template

## 0repo add will download the dist.zip
rm -f $Package*-$version.xml
rm -f *.zip

git add *.gpg catalog.xml "${Package}*.xml"
git add keys/.
git add resources/.
git commit -m "Update $Package 0install: $version"
